/*
 * main.c
 *
 *  Created on: 2017/10/26
 *      Author: M10512001
 */
#include <system.h>
#include <stdio.h>
#include <unistd.h>
#include <Altera_UP_SD_Card_Avalon_Interface.h>

bool SD_Card_Init(void);
void List_SD_Card_Files();
int Get_File_Len(char *filename);
char * File_Read_Into_List(char *filename, int len);
void Write_BMP_Into_SD_Card(char *list, int len);

int main() {
    char filename[20];
    int len;
    char *list;
    while(1) {
    	while(SD_Card_Init() == false)
    		usleep(3 * 1000 * 1000);
    	printf("Info: Enter the name of the file you want to load\n");
    	scanf("%s", filename);
    	len = Get_File_Len(filename);
    	list = File_Read_Into_List(filename, len);
    	Write_BMP_Into_SD_Card(list, len);
    	printf("\n");
    }
    return 0;
}

bool SD_Card_Init(void) {
	alt_up_sd_card_dev *sd_card_dev = alt_up_sd_card_open_dev(SD_CARD_NAME);
	if(sd_card_dev != 0) {
		if(alt_up_sd_card_is_Present()) {
			if(alt_up_sd_card_is_FAT16()) {
				printf("Info: Card is FAT16.\n");
				// 列出記憶卡根目錄下的檔案
				List_SD_Card_Files();
				return true;
			}
			else
				printf("Info: Card is not FAT16.\n");
		}
		else
			printf("Info: Please Insert the SD Card\n");
	}
	return false;
}

void List_SD_Card_Files() {
	char root_filename[20];
	printf("Info: SD Card Root List\n");
	short int first_file_result = alt_up_sd_card_find_first("/.", root_filename);
	if(first_file_result == 0) {
		printf("Info: ./%s\n", root_filename);
		while(alt_up_sd_card_find_next(root_filename) != -1)
			printf("Info: ./%s\n", root_filename);
	}
	else if(first_file_result == -1)
		printf("Info: No files were found.\n");
	else
		printf("Info: Invalid Directory or Partition is not FAT16.\n");
}

int Get_File_Len(char *filename) {
	short int sd_fileh;
	short int byte;
	int count = 0;
	// 得到檔案大小
	sd_fileh = alt_up_sd_card_fopen(filename, false);
	while(1) {
		byte = alt_up_sd_card_read(sd_fileh);
		if( byte != -1)
			count += 1;
		else
			break;
	}
	alt_up_sd_card_fclose(sd_fileh);
	printf("Info: %s is %d bytes.\n", filename, count);
	return count;
}

char * File_Read_Into_List(char *filename, int len) {
	short int sd_fileh;
	int i;
	// 依檔案大小創建動態陣列，並將檔案讀入陣列
	char *list = malloc(len * sizeof(char));
	if(!list)
		printf("Info: List create failed.\n");
	else {
		sd_fileh = alt_up_sd_card_fopen(filename, false);
		for(i=0; i<len; i++)
			list[i] = alt_up_sd_card_read(sd_fileh);
		alt_up_sd_card_fclose(sd_fileh);
	}
	// 將動態陣列的指標回傳
	return list;
}

void Write_BMP_Into_SD_Card(char *list, int len) {
	short int sd_fileh;
	int i;
	printf("Info: Save as BMP File ...");
	sd_fileh = alt_up_sd_card_fopen("save.bmp", false);
	for(i=0; i<len; i++) {
	    alt_up_sd_card_write(sd_fileh, list[i]);
	}
	alt_up_sd_card_fclose(sd_fileh);
	printf(" Done!\n");
}
